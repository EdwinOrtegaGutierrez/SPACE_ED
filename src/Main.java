import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.JPanel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author edwin
 */
public class Main extends javax.swing.JFrame implements KeyListener{
    
    boolean start = false;
    int nave_X, nave_Y;
    
    //Mover de posición la aplicación
    int xx, xy;
    
    Alien enemy;
    
    /**
     * Creates new form Main
     */
    public Main() {
        this.addKeyListener(this);
        initComponents();
        game_over.setVisible(false);
        shoot.setVisible(false);
        shoot.setLocation(50, 300);
        enemy = new Alien(dashboard, shoot, score, 0);
        enemy.aliensInvaders();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        header = new javax.swing.JPanel();
        componets = new javax.swing.JPanel();
        exit = new javax.swing.JPanel();
        btn_exit = new javax.swing.JLabel();
        max = new javax.swing.JPanel();
        btn_max = new javax.swing.JLabel();
        min = new javax.swing.JPanel();
        btn_min = new javax.swing.JLabel();
        title = new javax.swing.JPanel();
        imageTitle = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        text_title = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        dashboard = new javax.swing.JPanel();
        nave = new javax.swing.JPanel();
        nave_image = new javax.swing.JLabel();
        welcome = new javax.swing.JLabel();
        game_over = new javax.swing.JLabel();
        score = new javax.swing.JLabel();
        life = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        header.setBackground(new java.awt.Color(0, 0, 0));
        header.setPreferredSize(new java.awt.Dimension(800, 35));
        header.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                headerMouseDragged(evt);
            }
        });
        header.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                headerMousePressed(evt);
            }
        });
        header.setLayout(new java.awt.BorderLayout());

        componets.setBackground(new java.awt.Color(0, 0, 0));
        componets.setPreferredSize(new java.awt.Dimension(105, 35));
        componets.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        exit.setBackground(new java.awt.Color(0, 0, 0));
        exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exit.setLayout(new java.awt.BorderLayout());

        btn_exit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn_exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/delete_32px.png"))); // NOI18N
        btn_exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_exitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_exitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_exitMouseExited(evt);
            }
        });
        exit.add(btn_exit, java.awt.BorderLayout.CENTER);

        componets.add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 35, 35));

        max.setBackground(new java.awt.Color(0, 0, 0));
        max.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        max.setLayout(new java.awt.BorderLayout());

        btn_max.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn_max.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/full_screen_32px.png"))); // NOI18N
        btn_max.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_maxMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_maxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_maxMouseExited(evt);
            }
        });
        max.add(btn_max, java.awt.BorderLayout.CENTER);

        componets.add(max, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 0, 35, 35));

        min.setBackground(new java.awt.Color(0, 0, 0));
        min.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        min.setLayout(new java.awt.BorderLayout());

        btn_min.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn_min.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/minimize.png"))); // NOI18N
        btn_min.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btn_min.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_minMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_minMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_minMouseExited(evt);
            }
        });
        min.add(btn_min, java.awt.BorderLayout.CENTER);

        componets.add(min, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 35, 35));

        header.add(componets, java.awt.BorderLayout.LINE_END);

        title.setBackground(new java.awt.Color(0, 0, 0));
        title.setPreferredSize(new java.awt.Dimension(160, 35));
        title.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        imageTitle.setBackground(new java.awt.Color(0, 0, 0));
        imageTitle.setLayout(new java.awt.BorderLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconSpace/nave0.png"))); // NOI18N
        imageTitle.add(jLabel1, java.awt.BorderLayout.CENTER);

        title.add(imageTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 45, 35));

        text_title.setBackground(new java.awt.Color(0, 0, 0));
        text_title.setLayout(new java.awt.BorderLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 255, 204));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("SPACE ED");
        text_title.add(jLabel2, java.awt.BorderLayout.CENTER);

        title.add(text_title, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 0, 115, 35));

        header.add(title, java.awt.BorderLayout.LINE_START);

        getContentPane().add(header, java.awt.BorderLayout.PAGE_START);

        dashboard.setBackground(new java.awt.Color(0, 0, 0));
        dashboard.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(255, 255, 255)));
        dashboard.setForeground(new java.awt.Color(102, 102, 0));
        dashboard.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nave.setBackground(new java.awt.Color(12, 1, 100));
        nave.setOpaque(false);
        nave.setLayout(new java.awt.BorderLayout());

        nave_image.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nave_image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconSpace/nave0.png"))); // NOI18N
        nave.add(nave_image, java.awt.BorderLayout.CENTER);

        dashboard.add(nave, new org.netbeans.lib.awtextra.AbsoluteConstraints(369, 401, 45, -1));

        welcome.setFont(new java.awt.Font("OCR A Extended", 3, 36)); // NOI18N
        welcome.setForeground(new java.awt.Color(255, 255, 204));
        welcome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        welcome.setText("Press Space");
        welcome.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        dashboard.add(welcome, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 330, 270, 52));

        game_over.setBackground(new java.awt.Color(255, 153, 153));
        game_over.setFont(new java.awt.Font("OCR A Extended", 3, 48)); // NOI18N
        game_over.setForeground(new java.awt.Color(255, 153, 153));
        game_over.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        game_over.setText("GAME OVER");
        dashboard.add(game_over, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 120, 280, 150));

        score.setFont(new java.awt.Font("OCR A Extended", 3, 24)); // NOI18N
        score.setForeground(new java.awt.Color(255, 255, 204));
        score.setText("SCORE: 0000");
        dashboard.add(score, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 370, 60));

        life.setFont(new java.awt.Font("OCR A Extended", 3, 24)); // NOI18N
        life.setForeground(new java.awt.Color(255, 255, 204));
        life.setText("LIFE: 03");
        dashboard.add(life, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 0, 170, 60));

        getContentPane().add(dashboard, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(800, 500));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void changeColor(JPanel hover, Color rand){
        hover.setBackground(rand);
    }
    
    private void btn_exitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_exitMouseEntered
        // TODO add your handling code here:
        changeColor(exit, new Color(51,51,51));
    }//GEN-LAST:event_btn_exitMouseEntered

    private void btn_exitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_exitMouseExited
        // TODO add your handling code here:
        changeColor(exit, new Color(0,0,0));
    }//GEN-LAST:event_btn_exitMouseExited

    private void btn_exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_exitMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btn_exitMouseClicked

    private void btn_maxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_maxMouseEntered
        // TODO add your handling code here:
        changeColor(max, new Color(51,51,51));
    }//GEN-LAST:event_btn_maxMouseEntered

    private void btn_maxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_maxMouseExited
        // TODO add your handling code here:
        changeColor(max, new Color(0,0,0));
    }//GEN-LAST:event_btn_maxMouseExited

    private void btn_maxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_maxMouseClicked
        // TODO add your handling code here:
        if(this.getExtendedState() != Main.MAXIMIZED_BOTH){
            this.setExtendedState(Main.MAXIMIZED_BOTH);
            //windowadapter
            dashboard.add(nave, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 680, 45, -1));
            dashboard.add(welcome, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 600, 615, 52));
            dashboard.add(game_over, new org.netbeans.lib.awtextra.AbsoluteConstraints(535, 350, 280, 150));
        }
        else{
            this.setExtendedState(Main.NORMAL);
            dashboard.add(nave, new org.netbeans.lib.awtextra.AbsoluteConstraints(369, 401, 45, -1));
            dashboard.add(welcome, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 331, 615, 52));
            dashboard.add(game_over, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 120, 280, 150));
        }
    }//GEN-LAST:event_btn_maxMouseClicked

    private void btn_minMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_minMouseEntered
        // TODO add your handling code here:
        changeColor(min, new Color(51,51,51));
    }//GEN-LAST:event_btn_minMouseEntered

    private void btn_minMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_minMouseExited
        // TODO add your handling code here:
        changeColor(min, new Color(0,0,0));
    }//GEN-LAST:event_btn_minMouseExited

    private void btn_minMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_minMouseClicked
        // TODO add your handling code here:
           this.setExtendedState(ICONIFIED);
    }//GEN-LAST:event_btn_minMouseClicked

    private void headerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMousePressed
        // TODO add your handling code here:
        xx = evt.getX();
        xy = evt.getY();
    }//GEN-LAST:event_headerMousePressed

    private void headerMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMouseDragged
        // TODO add your handling code here:
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        
        setLocation(x-xx, y-xy);
    }//GEN-LAST:event_headerMouseDragged
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btn_exit;
    private javax.swing.JLabel btn_max;
    private javax.swing.JLabel btn_min;
    private javax.swing.JPanel componets;
    private javax.swing.JPanel dashboard;
    private javax.swing.JPanel exit;
    private javax.swing.JLabel game_over;
    private javax.swing.JPanel header;
    private javax.swing.JPanel imageTitle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel life;
    private javax.swing.JPanel max;
    private javax.swing.JPanel min;
    private javax.swing.JPanel nave;
    private javax.swing.JLabel nave_image;
    private javax.swing.JLabel score;
    private javax.swing.JPanel text_title;
    private javax.swing.JPanel title;
    private javax.swing.JLabel welcome;
    // End of variables declaration//GEN-END:variables
    private javax.swing.JPanel shoot = new javax.swing.JPanel();
    private Shooter myShoot;
    //  IMPLEMENTACION DEL KEYLISTENER
    @Override
    public void keyTyped(KeyEvent e) {
        // Se invoca cuando la tecla es escrita
        //nave
        if (start == true){
            switch(e.getKeyChar()){
                case 'a' -> { // LEFT
                    nave.setLocation(nave.getX()-5, nave.getY());
                }
                case 'w' -> { // UP
                    nave.setLocation(nave.getX(), nave.getY()-5);
                }
                case 's' -> { // DOWN
                    nave.setLocation(nave.getX(), nave.getY()+5);
                }
                case 'd' -> { // RIGHT
                    nave.setLocation(nave.getX()+5, nave.getY());
                }
            }
        }
    }

    @Override
    public void keyPressed(KeyEvent e) {
        // Se invoca cuando la tecla es precionada fisicamente
        switch(e.getKeyCode()){
            case 32 -> { //Space
                welcome.setVisible(false);
                start = true;
                game_over.setVisible(false);
            }
            case 10 -> { //Enter
                welcome.setVisible(false);
                start = true;
                game_over.setVisible(false);
            }
        }
        if (start == true){
            switch(e.getKeyCode()){
                case 37 -> { //Left
                    nave.setLocation(nave.getX()-5, nave.getY());
                }
                case 38 -> { //Up
                    nave.setLocation(nave.getX(), nave.getY()-5);
                }
                case 40 -> { //Down
                    nave.setLocation(nave.getX(), nave.getY()+5);
                }
                case 39 -> { //Right
                    nave.setLocation(nave.getX()+5, nave.getY());
                }
            }
        }
    }
    
    @Override
    public void keyReleased(KeyEvent e) {
        gameOverDashB(e);
        if(start == true){
            switch(e.getKeyCode()){
                case 90 -> {
                    myShoot = new Shooter(shoot, nave, dashboard);
                    myShoot.shooting(e);
                }
            }
        }
    }
    
    public void gameOverDashB(KeyEvent e){
        if(this.getExtendedState() == Main.MAXIMIZED_BOTH){
            if(nave.getX() <= 0 || nave.getX() >= 1321 || nave.getY() <= 0 || nave.getY() >= 691){
                start = false;
                game_over.setVisible(true);
                welcome.setVisible(true);
                score.setText("SCORE: 0000");
                enemy.resetPoint();
            }
        }
        else if(this.getExtendedState() == Main.NORMAL){
            if(nave.getX() <= 0 || nave.getX() >= 760 || nave.getY() <= 0 || nave.getY() >= 422){
                start = false;
                game_over.setVisible(true);
                welcome.setVisible(true);
                score.setText("SCORE: 0000");
                enemy.resetPoint();
            }
        }
    }
}